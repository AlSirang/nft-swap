// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OfferRemoved extends ethereum.Event {
  get params(): OfferRemoved__Params {
    return new OfferRemoved__Params(this);
  }
}

export class OfferRemoved__Params {
  _event: OfferRemoved;

  constructor(event: OfferRemoved) {
    this._event = event;
  }

  get offerId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fromId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get toId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get toCollection(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class SubmitOffer extends ethereum.Event {
  get params(): SubmitOffer__Params {
    return new SubmitOffer__Params(this);
  }
}

export class SubmitOffer__Params {
  _event: SubmitOffer;

  constructor(event: SubmitOffer) {
    this._event = event;
  }

  get toId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fromId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get offerIndex(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get msgValue(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get toCollection(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get fromCollection(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get from(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class NFTExchange__offersResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    return map;
  }

  getFrom(): Address {
    return this.value0;
  }

  getFromCollection(): Address {
    return this.value1;
  }

  getToCollection(): Address {
    return this.value2;
  }

  getFromId(): BigInt {
    return this.value3;
  }

  getToId(): BigInt {
    return this.value4;
  }

  getValue(): BigInt {
    return this.value5;
  }
}

export class NFTExchange extends ethereum.SmartContract {
  static bind(address: Address): NFTExchange {
    return new NFTExchange("NFTExchange", address);
  }

  offers(param0: BigInt): NFTExchange__offersResult {
    let result = super.call(
      "offers",
      "offers(uint256):(address,address,address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new NFTExchange__offersResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt()
    );
  }

  try_offers(param0: BigInt): ethereum.CallResult<NFTExchange__offersResult> {
    let result = super.tryCall(
      "offers",
      "offers(uint256):(address,address,address,uint256,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NFTExchange__offersResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt()
      )
    );
  }
}

export class AccpetOfferCall extends ethereum.Call {
  get inputs(): AccpetOfferCall__Inputs {
    return new AccpetOfferCall__Inputs(this);
  }

  get outputs(): AccpetOfferCall__Outputs {
    return new AccpetOfferCall__Outputs(this);
  }
}

export class AccpetOfferCall__Inputs {
  _call: AccpetOfferCall;

  constructor(call: AccpetOfferCall) {
    this._call = call;
  }

  get _offerIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AccpetOfferCall__Outputs {
  _call: AccpetOfferCall;

  constructor(call: AccpetOfferCall) {
    this._call = call;
  }
}

export class CreateOfferCall extends ethereum.Call {
  get inputs(): CreateOfferCall__Inputs {
    return new CreateOfferCall__Inputs(this);
  }

  get outputs(): CreateOfferCall__Outputs {
    return new CreateOfferCall__Outputs(this);
  }
}

export class CreateOfferCall__Inputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }

  get _fromCollection(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _toCollection(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _fromId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _toId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class CreateOfferCall__Outputs {
  _call: CreateOfferCall;

  constructor(call: CreateOfferCall) {
    this._call = call;
  }
}

export class RemoveOfferCall extends ethereum.Call {
  get inputs(): RemoveOfferCall__Inputs {
    return new RemoveOfferCall__Inputs(this);
  }

  get outputs(): RemoveOfferCall__Outputs {
    return new RemoveOfferCall__Outputs(this);
  }
}

export class RemoveOfferCall__Inputs {
  _call: RemoveOfferCall;

  constructor(call: RemoveOfferCall) {
    this._call = call;
  }

  get _offerIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveOfferCall__Outputs {
  _call: RemoveOfferCall;

  constructor(call: RemoveOfferCall) {
    this._call = call;
  }
}
